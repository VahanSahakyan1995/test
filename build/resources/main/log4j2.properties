property.dirname = logs
property.filename = qa.log
property.pattern = %-4p [%d] %c [%t %x]: %m%n

status = INFO

# Console log
appender.console.type = Console
appender.console.name = Log2Console
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = ${pattern}

# Rotate log file
appender.rolling.type = RollingFile
appender.rolling.name = Log2RollingFile
appender.rolling.fileName = ${dirname}/${filename}
appender.rolling.filePattern = ${dirname}/$${date:yyyy-MM}/${filename}-%d{dd}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = ${pattern}
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=10MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 10

# Socket log file
appender.server.type = Socket
appender.server.name = Log2Socket
#appender.server.additivity = false
appender.server.layout.type = JSONLayout
appender.server.layout.complete = true
appender.server.layout.ConversionPattern = %highlight{%d [%t] %-5level: %msg%n%throwable}{FATAL=white, ERROR=red, WARN=blue, INFO=black, DEBUG=green, TRACE=blue}
appender.server.protocol = UDP
appender.server.connectTimeoutMillis = 1000

# Send logs to console, rolling file, and socket
logger.app.name = web_tests
logger.app.level = INFO
logger.app.additivity = false
logger.app.appenderRef.rolling.ref = Log2RollingFile
logger.app.appenderRef.console.ref = Log2Console
logger.app.appenderRef.server.ref = Log2Socket

rootLogger.level = INFO
rootLogger.appenderRefs = stdout
#rootLogger.appenderRef.rolling.ref = Log2RollingFile    #show the logs in qa.log
rootLogger.appenderRef.stdout.ref = Log2Console
#rootLogger.appenderRef.server.ref = Log2Socket